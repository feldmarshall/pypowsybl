name: Snapshot CI

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

env:
  BUILD_STATUS: ${{ github.workspace }}/build_status.txt

jobs:
  build_pypowsybl:
    name: Build ${{ matrix.config.name }} ${{ matrix.python.name }} wheel
    runs-on: ${{ matrix.config.os }}
    outputs:
      build_status_output: ${{ steps.build_status_step.outputs.build_status_output }} #Output job with build_status.txt content created in Read Build Status step
      core-version: ${{ env.CORE_VERSION }}
      afs-branch: ${{ env.INTEGRATION_BRANCH }}
      olf-version: ${{ env.OLF_VERSION }}
      diagram-version: ${{ env.DIAGRAM_VERSION }}
      entsoe-version: ${{ env.ENTSOE_VERSION }}
      openrao-version: ${{ env.OPENRAO_VERSION }}
      dependencies-version: ${{ env.DEPENDENCIES_VERSION }}

    strategy:
      matrix:
        config:
          - { name: ubuntu, os: ubuntu-latest}
          - { name: darwin, os: macos-13, macosx_deployment_target: "10.16", bdist_wheel_args: "--plat-name macosx-11.0-x86_64" }
          - { name: darwin-arm64, os: macos-14, macosx_deployment_target: "11", bdist_wheel_args: "--plat-name macosx-11.0-arm64"}
          - { name: windows, os: windows-2022}
        python:
          - { name: cp38, version: '3.8' }
          - { name: cp39, version: '3.9' }
          - { name: cp310, version: '3.10' }
          - { name: cp311, version: '3.11' }
          - { name: cp312, version: '3.12' }
      fail-fast: false
    defaults:
      run:
        shell: bash

    steps:

      # Setup Python
      - name: Set up Python ${{ matrix.python.version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip

      # Setup GraalVM
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Define scripts path
      - name: Set up script path
        run: |
          SCRIPTS_PATH="${GITHUB_WORKSPACE}/scripts/.github/workflows/scripts"
          if [[ "${{ matrix.config.name }}" == "windows" ]]; then
            SCRIPTS_PATH=$(echo "$SCRIPTS_PATH" | sed 's/\\/\//g')
          fi
          echo "SCRIPTS_PATH=$SCRIPTS_PATH" >> $GITHUB_ENV  

      # Build powsybl-core on main branch
      - name: Checkout core sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-core
          ref: main
          path: powsybl-core

      - name: Build powsybl-core
        run: mvn -batch-mode --no-transfer-progress clean install -DskipTests
        working-directory: ./powsybl-core

      - name: Get powsybl-core version
        run: echo "CORE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-core

      # Checkout script
      # The script check_integration_branch.sh is located in the workflow folder of the repository
      # It is necessary for checking out the integration branch if it exists
      - name: Checkout script
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          sparse-checkout: |
            .github
          sparse-checkout-cone-mode: false
          path: scripts

      # Build Open-Loadflow
      - name: Checking for powsybl-open-loadflow snapshot branch
        run : ${{ env.SCRIPTS_PATH }}/check_integration_branch.sh "https://github.com/powsybl/powsybl-open-loadflow.git" ${{ env.CORE_VERSION }}
        
      - name: Checkout powsybl-open-loadflow sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-open-loadflow
          ref: ${{ env.INTEGRATION_BRANCH }}
          path: powsybl-open-loadflow
          
      - name: Change core version in pom.xml
        run: mvn versions:set-property -Dproperty=powsybl-core.version -DnewVersion=${{ env.CORE_VERSION}} -DgenerateBackupPoms=false
        working-directory: ./powsybl-open-loadflow
        
      - name: Build powsybl-open-loadflow
        continue-on-error: true
        run: ${{ env.SCRIPTS_PATH }}/build_module.sh "LOADFLOW" "mvn -batch-mode --no-transfer-progress clean install" ${{ matrix.config.name }}  ${{ matrix.python.name }}
        working-directory: ./powsybl-open-loadflow

      - name: Get OLF_VERSION
        run: echo "OLF_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-open-loadflow

      - name: Print file
        run: |
          echo "============================================="
          cat job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt
          echo "============================================="

# Build powsybl-diagram
      - name: Checking for diagram snapshot branch
        run : ${{ env.SCRIPTS_PATH }}/check_integration_branch.sh  "https://github.com/powsybl/powsybl-diagram.git" ${{ env.CORE_VERSION }}

      - name: Checkout diagram sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-diagram
          ref: ${{ env.INTEGRATION_BRANCH }}
          path: powsybl-diagram

      - name: Change core version in pom.xml
        run: mvn versions:set-property -Dproperty=powsybl-core.version -DnewVersion=${{ env.CORE_VERSION}} -DgenerateBackupPoms=false
        working-directory: ./powsybl-diagram

      - name: Build powsybl-diagram
        continue-on-error: true
        run: ${{ env.SCRIPTS_PATH }}/build_module.sh "DIAGRAM" "mvn -batch-mode --no-transfer-progress clean install" ${{ matrix.config.name }}  ${{ matrix.python.name }}
        working-directory: ./powsybl-diagram

      - name: Get DIAGRAM_VERSION version
        run: echo "DIAGRAM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-diagram

      - name: Print file
        run: |
          echo "============================================="
          cat job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt
          echo "============================================="

      # Build powsybl-entsoe
      - name: Checking for powsybl-entsoe snapshot branch
        run : ${{ env.SCRIPTS_PATH }}/check_integration_branch.sh  "https://github.com/powsybl/powsybl-entsoe.git" ${{ env.CORE_VERSION }}

      - name: Checkout powsybl-entsoe sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-entsoe
          ref: ${{ env.INTEGRATION_BRANCH }}
          path: powsybl-entsoe

      - name: Change core/loadflow version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=powsyblcore.version -DnewVersion=${{ env.CORE_VERSION}} -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsyblopenloadflow.version -DnewVersion=${{ env.OLF_VERSION}} -DgenerateBackupPoms=false
        working-directory: ./powsybl-entsoe

      - name: Build powsybl-entsoe
        continue-on-error: true
        run: ${{ env.SCRIPTS_PATH }}/build_module.sh "ENTSOE" "mvn -batch-mode --no-transfer-progress clean install" ${{ matrix.config.name }}  ${{ matrix.python.name }}
        working-directory: ./powsybl-entsoe

      - name: Get ENTSOE_VERSION
        run: echo "ENTSOE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-entsoe

      - name: Print file
        run: |
          echo "============================================="
          cat job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt
          echo "============================================="

      # Build powsybl-open-rao
      - name: Checking for powsybl-open-rao snapshot branch
        run :  ${{ env.SCRIPTS_PATH }}/check_integration_branch.sh "https://github.com/powsybl/powsybl-open-rao.git" ${{ env.CORE_VERSION }}

      - name: Checkout powsybl-open-rao sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-open-rao
          ref: ${{ env.INTEGRATION_BRANCH }}
          path: powsybl-openrao

      - name: Change core/entsoe/loadflow version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=powsybl.core.version -DnewVersion=${{ env.CORE_VERSION}} -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl.entsoe.version -DnewVersion=${{ env.ENTSOE_VERSION}} -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl.openloadflow.version -DnewVersion=${{ env.OLF_VERSION}} -DgenerateBackupPoms=false
        working-directory: ./powsybl-openrao

      - name: Build powsybl-open-rao
        continue-on-error: true
        run: ${{ env.SCRIPTS_PATH }}/build_module.sh "OPENRAO" "mvn -batch-mode --no-transfer-progress clean install" ${{ matrix.config.name }} ${{ matrix.python.name }}
        working-directory: ./powsybl-openrao

      - name: Get OPENRAO_VERSION
        run: echo "OPENRAO_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-openrao

      - name: Print file
        run: |
          echo "============================================="
          cat job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt
          echo "============================================="

      # Build powsybl-dynawo
      - name: Checking for powsybl-dynawo snapshot branch
        run: ${{ env.SCRIPTS_PATH }}/check_integration_branch.sh "https://github.com/powsybl/powsybl-dynawo.git" ${{ env.CORE_VERSION }}

      - name: Checkout powsybl-dynawo sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-dynawo
          ref: ${{ env.INTEGRATION_BRANCH }}
          path: powsybl-dynawo

      - name: Change core version in pom.xml in pom.xml
        run: mvn versions:set-property -Dproperty=powsybl-core.version -DnewVersion=${{ env.CORE_VERSION}} -DgenerateBackupPoms=false
        working-directory: ./powsybl-dynawo

      - name: Build powsybl-dynawo
        continue-on-error: true
        run: ${{ env.SCRIPTS_PATH }}/build_module.sh "DYNAWO" "mvn -batch-mode --no-transfer-progress clean install" ${{ matrix.config.name }}  ${{ matrix.python.name }}
        working-directory: ./powsybl-dynawo

      - name: Get DYNAWO_VERSION
        run: echo "DYNAWO_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-dynawo

      - name: Print file
        run: |
          echo "============================================="
          cat job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt
          echo "============================================="

      # Checkout powsybl-dependencies
      - name: Checkout powsybl-dependencies sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/powsybl-dependencies
          ref: main
          path: powsybl-dependencies

      - name: Get DEPENDENCIES_VERSION
        run: echo "DEPENDENCIES_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-dependencies

      # Update or install powsybl-dependencies
      - name: Update powsybl-dependencies versions
        run: |
          mvn versions:set-property -Dproperty=powsybl-open-loadflow.version -DnewVersion=$OLF_VERSION -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl-core.version -DnewVersion=$CORE_VERSION -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl-diagram.version -DnewVersion=$DIAGRAM_VERSION -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl-dynawo.version -DnewVersion=$DYNAWO_VERSION -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl-entsoe.version -DnewVersion=$ENTSOE_VERSION -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl-open-rao.version -DnewVersion=$OPENRAO_VERSION -DgenerateBackupPoms=false
        working-directory: ./powsybl-dependencies

      - name: Install powsybl-dependencies
        continue-on-error: true
        run: mvn -batch-mode --no-transfer-progress clean install
        working-directory: ./powsybl-dependencies

      # Build pypowsybl
      - name: Checking for pypowsybl snapshot branch
        run: ${{ env.SCRIPTS_PATH }}/check_integration_branch.sh "https://github.com/powsybl/pypowsybl.git" ${{ env.CORE_VERSION }}

      - name: Checkout pypowsybl
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          repository: powsybl/pypowsybl
          ref: ${{ env.INTEGRATION_BRANCH }}
          path: pypowsybl
          submodules: true

      - name: Update java/pom.xml
        run: mvn versions:set-property -Dproperty=powsybl-dependencies.version -DnewVersion=$DEPENDENCIES_VERSION -DgenerateBackupPoms=false
        working-directory: ./pypowsybl/java

      - name: Install requirement.txt
        run: pip3 install -r requirements.txt
        working-directory: ./pypowsybl

      - name: Build wheel
        run: python3 setup.py bdist_wheel
        working-directory: ./pypowsybl

      - name: Install wheel
        run: python -m pip install dist/*.whl --user
        working-directory: ./pypowsybl

      - name: Check pypowsybl versions
        working-directory: ./pypowsybl/tests
        run: python3 basic_import_test.py

      - name: Run tests
        working-directory: ./pypowsybl/tests
        run: pytest

      - name: Upload wheel
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # 4.3.3
        with:
          name: pypowsybl-wheel-${{ matrix.config.name }}-${{ matrix.python.name }}
          path: dist/*.whl

      - name: Store job result
        if: always()
        run: |
          echo "${{ matrix.config.name }};pypowsybl-wheel-${{ matrix.config.name }}-${{ matrix.python.name }};${{ job.status }}" >> job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt

      - name: Print file
        run: |
          echo "============================================="
          cat job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt
          echo "============================================="

      - name: Upload job result
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # 4.3.3
        with:
          name: job-results_${{ matrix.config.name }}-${{ matrix.python.name }}
          path: job_result_${{ matrix.config.name }}-${{ matrix.python.name }}.txt

  # Slack notification
  notify_slack:
   needs: build_pypowsybl
   runs-on: ubuntu-latest
   if: always()
   steps:
     - name: Download job results
       uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8

     - name: Combine job results
       run: |
         for dir in job-results_*; do
           cat "$dir"/* >> combined_job_results.txt
         done
         echo "===== Step Result ====="
         cat combined_job_results.txt
         echo "======================="

     - name: Determine workflow status
       id: workflow_status
       run: |
         if grep -q "failure" combined_job_results.txt; then
           echo "icon=❌" >> $GITHUB_OUTPUT
           echo "status=Failed" >> $GITHUB_OUTPUT
         else
           echo "icon=✅" >> $GITHUB_OUTPUT
           echo "status=Successful" >> $GITHUB_OUTPUT
         fi

     - name: Format job results
       id: format_results
       run: |
         formatted=""
         while IFS=';' read -r os python module status; do
           icon=$([ "$status" == "success" ] && echo ":white_check_mark:" || echo ":x:")
           formatted+="${icon} Build *${module}* on *${os}* - *${python}*\\n"
         done < combined_job_results.txt
         formatted="${formatted%\\n}"  # Remove the last newline
         echo "formatted_results=${formatted}" >> $GITHUB_OUTPUT
         echo "===== Formatted Result ====="
         echo -e ${formatted}
         echo "======================="

#     - name: Send Slack Notification
#       uses: 8398a7/action-slack@v3
#       with:
#         status: ${{ job.status }}
#         text: |
#           :x: *Failed workflow ${{ github.workflow }}*
#           *Failure details:*
#           ```
#           ${{ needs.build_pypowsybl.outputs.build_status_output }}
#           ```
#           See logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
#       env:
#         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
